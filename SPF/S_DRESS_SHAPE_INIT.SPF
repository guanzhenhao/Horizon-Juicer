PROC S_DRESS_SHAPE_INIT SBLOF DISPLOF
;参数初始化垂直位置计算

DEF REAL SHAPE_VER_REAL;新砂轮抬刀高度
DEF REAL SHAPE_VER_REAL_L
DEF REAL SHAPE_VER_REAL_R
DEF REAL SHAPE_VER_REAL_FIX;考虑进给量高度
;梯形临时变量
DEF REAL TRAP_TE1
DEF REAL TRAP_TE2
;双圆弧临时变量
DEF REAL DR5
DEF REAL DR8
DEF REAL DR9
DEF REAL DR13
DEF REAL DR28

DRESS_TIME_RCURNT=0
DRESS_TIME_FCURNT=0
DRESS_TIME_ACURNT=0

;新砂轮抬刀计算
IF WHEEL_STA==0
    CASE DSHAPE OF 0 GOTOF VER_0 1 GOTOF VER_1 DEFAULT GOTOF VER_2

    VER_0:
    SHAPE_VER_REAL_L=(WHEEL_WIDTH/2-TRIANGLE_VER*TAN(TRIANGLE_ANG_L)-TRIANGLE_RND_L*(1-SIN(TRIANGLE_ANG_L))/COS(TRIANGLE_ANG_L)-TRIANGLE_RND_TL*SIN(45-TRIANGLE_ANG_L/2))*TAN(30)+TRIANGLE_VER
    SHAPE_VER_REAL_R=(WHEEL_WIDTH/2-TRIANGLE_VER*TAN(TRIANGLE_ANG_R)-TRIANGLE_RND_L*(1-SIN(TRIANGLE_ANG_R))/COS(TRIANGLE_ANG_R)-TRIANGLE_RND_TR*SIN(45-TRIANGLE_ANG_R/2))*TAN(30)+TRIANGLE_VER
    GOTOF NEXT

    VER_1:
    TRAP_TE2=TRAP_PITCH/2-TRAP_VER_BOTM*TAN(TRAP_ANG_R)-TRAP_VER_BOTM*TAN(TRAP_ANG_L)
    TRAP_TE1=TRAP_TE2/(Tan(TRAP_ANG_R)+Tan(TRAP_ANG_L))
    SHAPE_VER_REAL_L=(WHEEL_WIDTH/2-TRAP_RND_TR *TAN(45-TRAP_ANG_R/2)-(TRAP_TE1+TRAP_VER)*TAN(TRAP_ANG_R))*TAN(30)+TRAP_VER+0.5
    SHAPE_VER_REAL_R=(WHEEL_WIDTH/2-TRAP_RND_TL *TAN(45-TRAP_ANG_L/2)-(TRAP_TE1+TRAP_VER)*TAN(TRAP_ANG_L))*TAN(30)+TRAP_VER+0.5
    GOTOF NEXT

    VER_2:
    DR5=((DARC_DIA_PERFORM-DARC_DIA_FACE)/2)
    DR8=ASIN((DR5+DARC_RND_LTRANS_VER+DARC_RND_T)/(DARC_RND_L+DARC_RND_T))
    DR9=ASIN((DR5+DARC_RND_RTRANS_VER+DARC_RND_T)/(DARC_RND_R+DARC_RND_T))
    DR13=(COS(DR8)*(DARC_RND_L+DARC_RND_T))+DWHEEL_RND_L
    DR28=(COS(DR9)*(DARC_RND_R+DARC_RND_T))+DWHEEL_RND_R
    SHAPE_VER_REAL_L=(DARC_RND_L-(DR5+DARC_RND_LTRANS_VER))+((((WHEEL_WIDTH/2)-(DR13-DARC_RND_LTRANS_HORI))+(DWHEEL_RND_L*TAN(15)))*TAN(30))
    SHAPE_VER_REAL_R=(DARC_RND_R-(DR5+DARC_RND_RTRANS_VER))+((((WHEEL_WIDTH/2)-(DR28-DARC_RND_RTRANS_HORI))+(DWHEEL_RND_R*TAN(15)))*TAN(30))
    GOTOF NEXT

    ;初始修整位置及对应修整次数
    NEXT:
    IF SHAPE_VER_REAL_L>=SHAPE_VER_REAL_R
        SHAPE_VER_REAL=SHAPE_VER_REAL_L
    ELSE
        SHAPE_VER_REAL=SHAPE_VER_REAL_R
    ENDIF

    IF DRESS_TIME_R<>0
        DRESS_TIME_ADD=ROUNDUP(SHAPE_VER_REAL/DRESS_DEEP_R)
        SHAPE_VER_REAL_FIX=DRESS_TIME_ADD*DRESS_DEEP_R
    ELSE
        DRESS_TIME_ADD=ROUNDUP(SHAPE_VER_REAL/DRESS_DEEP_F)
        SHAPE_VER_REAL_FIX=DRESS_TIME_ADD*DRESS_DEEP_F
    ENDIF

    DRESS_VER_INIT_L=DWHEEL_TOUCH_L+SHAPE_VER_REAL_FIX
    DRESS_VER_INIT_R=DWHEEL_TOUCH_R+SHAPE_VER_REAL_FIX
ELSE
    DRESS_TIME_ADD=0
    DRESS_VER_INIT_L=DRESS_VER_INIT_L
    DRESS_VER_INIT_R=DRESS_VER_INIT_R
ENDIF

RET
