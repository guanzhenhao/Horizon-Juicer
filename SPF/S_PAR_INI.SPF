PROC S_PAR_INI SBLOF DISPLOF
;参数初始化

DRFOF;手轮偏置清除
INI[25]=1;退刀计算标志位置1

DRESSER[41]=-DRESSER[2]+((DRESSER[39]-DRESSER[23]/2-DRESSER[37]/2)/2+DRESSER[23]/2);修整轮相对砂轮1&2修整起点位置X坐标

;新砂轮时磨削初始和当前接触
GRIND[1]=$A_DBB[0];是否修整
IF GRIND[1]==1
	IF (DRESSER[5]==0) AND (DRESSER[45]==1) AND (INI[29]==0);砂轮1为新砂轮且要修整
		PROCESS[13]=PROCESS[13]+(WHEEL[12]-WHEEL[10]);新砂轮1接触工件位置等于初始接触加上当前与初始接触修整轮距离(如果相减为负则说明新砂轮直径小于当前旧砂轮)
		PROCESS[4]=PROCESS[4]+(WHEEL[12]-WHEEL[10])
		INI[29]=1;新砂轮1磨削接触位计算标记
	ENDIF
	IF (DRESSER[40]==0) AND (DRESSER[46]==1) AND (INI[30]==0);砂轮2为新砂轮且要修整
		PROCESS[16]=PROCESS[16]+(WHEEL[20]-WHEEL[22]);新砂轮2接触工件位置等于初始接触加上当前与初始接触修整轮距离
		PROCESS[15]=PROCESS[15]+(WHEEL[20]-WHEEL[22])
		INI[30]=1;新砂轮2磨削接触位计算标记
	ENDIF
ENDIF

;螺旋升角值
IF INI[0]==0;右旋
	INI[20]=-(INI[17]+INI[18]/60+INI[19]/3600);计算升角值
ELSE
	INI[20]=INI[17]+INI[18]/60+INI[19]/3600;计算升角值
ENDIF

IF GRIND[0]==1;是内螺纹磨削
	INI[6]=INI[2]
	INI[7]=INI[1]
ELSE;不是内螺纹磨削
	IF INI[0]==1;左旋
		INI[6]=INI[1]
		INI[7]=INI[2]
	ELSE;右旋
		INI[6]=INI[2];磨削起点
		INI[7]=INI[1];磨削终点
	ENDIF
ENDIF

INI[3]=INI[2]-INI[1];磨削长度
INI[5]=WORK[0]*INI[4];导程
INI[9]=360*(INI[3]-INI[24])/INI[5];磨削总角度
INI[8]=(INI[2]+INI[1])/2;磨削中点

;锥度相关计算
IF INI[11]==0;判断有无锥度
	INI[14]=0;锥度值
ELSE
	INI[14]=INI[12]/INI[13]
ENDIF

INI[15]=INI[3]*INI[14]/2;X方向的增量
;-----------
DRESSER[6]=0;报警标记取消
PROCESS[3]=0;修整标记清零
PROCESS[7]=0;当前磨削是否修整累计
TECH_TIME[0]=0;当前粗磨次数
TECH_TIME[1]=0;当前半粗磨次数
TECH_TIME[2]=0;当前半精磨次数
TECH_TIME[3]=0;当前精磨次数
TECH_TIME[4]=0
DRESSER[70]=0
DRESSER[71]=0

WORK[1]=0;当前磨削头数

;-----------
;X轴初始接触赋值位置选择
IF PROCESS[0]==0;选择界面工艺时执行判断,选择DIY时在DIY内执行判断
	PROCESS[2]=0
	IF INI[26]<>0;0是单件磨削模式,1是批量磨削模式
		PROCESS[4]=PROCESS[13];砂轮1当前等于初始
		PROCESS[15]=PROCESS[16];砂轮2当前等于初始
		PROCESS[14]=0;工艺累积进刀清零
	ENDIF
ELSE
	PROCESS[2]=4
ENDIF
;-----------
;报警判断
IF INI[3]<=0;磨削长度<=0
	DRESSER[6]=1;工件左端坐标>工件右端坐标
ENDIF

IF (PROCESS[0]==0) AND (GRIND[1]==0) AND (GRIND[2]==0);选择界面工艺不是对刀不是修整,界面工艺修整量总量
	IF TECHNOLOGY[10]<>0
		IF TECHNOLOGY[74]==0
			DRESSER[70]=DRESSER[70]+TRUNC(TECHNOLOGY[10]/TECHNOLOGY[40])*DRESSER[25]*DRESSER[27]
		ELSE
			DRESSER[71]=DRESSER[71]+TRUNC(TECHNOLOGY[10]/TECHNOLOGY[40])*DRESSER[26]*DRESSER[28]
		ENDIF
	ENDIF
	IF TECHNOLOGY[11]<>0
		IF TECHNOLOGY[75]==0
			DRESSER[70]=DRESSER[70]+TRUNC(TECHNOLOGY[11]/TECHNOLOGY[41])*DRESSER[25]*DRESSER[27]
		ELSE
			DRESSER[71]=DRESSER[71]+TRUNC(TECHNOLOGY[11]/TECHNOLOGY[41])*DRESSER[26]*DRESSER[28]
		ENDIF
	ENDIF
	IF TECHNOLOGY[12]<>0
		IF TECHNOLOGY[76]==0
			DRESSER[70]=DRESSER[70]+TRUNC(TECHNOLOGY[12]/TECHNOLOGY[42])*DRESSER[25]*DRESSER[27]
		ELSE
			DRESSER[71]=DRESSER[71]+TRUNC(TECHNOLOGY[12]/TECHNOLOGY[42])*DRESSER[26]*DRESSER[28]
		ENDIF
	ENDIF
	IF TECHNOLOGY[13]<>0
		IF TECHNOLOGY[77]==0
			DRESSER[70]=DRESSER[70]+TRUNC(TECHNOLOGY[13]/TECHNOLOGY[43])*DRESSER[25]*DRESSER[27]
		ELSE
			DRESSER[71]=DRESSER[71]+TRUNC(TECHNOLOGY[13]/TECHNOLOGY[43])*DRESSER[26]*DRESSER[28]
		ENDIF
	ENDIF
ENDIF

IF DRESSER[24]-DRESSER[70]*2<DRESSER[35];当前砂轮1直径<最小砂轮1直径
	DRESSER[6]=2;砂轮1过小,请更换砂轮
ENDIF
IF DRESSER[38]-DRESSER[71]*2<DRESSER[44];当前砂轮2直径<最小砂轮2直径
	DRESSER[6]=3;砂轮2过小,请更换砂轮
ENDIF
;
RET

